{{ imports }}

{% if entityDocs and entityDocs.length > 0 %}
{% for doc in entityDocs %}
/// {{ doc }}
{% endfor %}
{% endif %}
#[derive(Debug, Clone, GraphQLObject)]
#[graphql(name = "{{ entityName | pascalCase }}")]
pub struct {{ entityName | pascalCase }}GraphQL {
{% for field in graphqlFields %}
    {% if field.docs and field.docs.length > 0 %}
    {% for doc in field.docs %}
    /// {{ doc }}
    {% endfor %}
    {% endif %}
    pub {{ field.fieldName }}: {{ field.rustType }},
{% endfor %}
}

impl From<crate::types::{{ entityName | pascalCase }}> for {{ entityName | pascalCase }}GraphQL {
    fn from(original: crate::types::{{ entityName | pascalCase }}) -> Self {
        Self {
{% for field in graphqlFields %}
            {{ field.fieldName }}: {{ field.fromOriginalExpr }},
{% endfor %}
        }
    }
}