//! This code was AUTOGENERATED using the Codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun Codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use carbon_core::borsh::{self, BorshDeserialize};


#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[derive(Debug, Clone, carbon_core::borsh::BorshSerialize, carbon_core::borsh::BorshDeserialize, PartialEq)]
pub struct PresetParameter {
pub bin_step: u16,
pub base_factor: u16,
pub filter_period: u16,
pub decay_period: u16,
pub reduction_factor: u16,
pub variable_fee_control: u32,
pub max_volatility_accumulator: u32,
pub min_bin_id: i32,
pub max_bin_id: i32,
pub protocol_share: u16,
}

impl PresetParameter {
    pub fn decode(data: &[u8]) -> Option<Self> {
                
                if data.len() < 8 {
                    return None;
                }
                let discriminator = &data[0..8];
                if discriminator != &[242, 62, 244, 34, 181, 112, 58, 170] {
                    return None;
                }
            
        
        let mut data_slice = data;

                data_slice = &data_slice[8..];
        
        if let Ok(decoded) = Self::deserialize(&mut data_slice) {
            return Some(decoded);
        }

        None
    }
}

